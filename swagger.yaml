openapi: "3.0.0"
info:
  description: "HiCotech api doc."
  version: "0.1.0"
  title: HiCotech API 2021

servers:
  - url: "http://localhost:5000/api"
  - url: "http://127.0.0.1:5000/api"

components:
  securitySchemes:
    Token: # TODO this isn't sending in swagger-ui??
      type: http
      description: Bearer Token
      scheme: Bearer
  schemas:
    User:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        dateOfBirth:
          type: string
        city:
          type: string
        weight:
          type: integer
        subscription:
          type: string
        sexe:
          type: string
        role:
          type: string
        discipline:
          type: string
    Discipline:
      type: object
      properties:
        label:
          type: string
        icon:
          type: string
    Invitation:
      type: object
      properties:
        email:
          type: string
        creacteBy:
          type: string
        dateExpiration:
          type: string
        etat:
          type: string
        expired:
          type: boolean
          default: false 
        userData:
          $ref: "#/components/schemas/User"
        acceptedBy:
          $ref: "#/components/schemas/User"
    UserLogin:
      type: object
      properties:
        email:
          type: string
        password:
          type: string

security:
  - Token: [] # Require token for all requests (unless otherwise specified)
tags:
  - name: user
    description: Operations about User
  - name: discipline
    description: Operations about Discipline
  - name: invitation
    description: Operations about Invitation

paths:
  /users:
    get:
      tags:
        - user
      summary: Get All Users
      produces:
        - application/json
      parameters:
        - name: email
          in: query
          required: false
          schema:
            type: string
        - name: role
          in: query
          required: false
          schema:
            type: string
        - name: discipline
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          schema:
            type: object
            additionalProperties:
              type: integer
              format: int32
    post:
      tags:
        - user
      summary: Add a new User
      requestBody:
        content:
          application/json: # Media type
            schema: # Request body contents
              $ref: "#/components/schemas/User" # Reference to an object
      responses:
        "200":
          description: OK
  /login:
    post:
      tags:
        - user
      summary: Login   User
      requestBody:
        content:
          application/json: # Media type
            schema: # Request body contents
              $ref: "#/components/schemas/UserLogin" # Reference to an object
      responses:
        "200":
          description: OK

  /users/{Id}:
    get:
      tags:
        - user
      summary: Returns a user by ID.
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
    put:
      tags:
        - user
      summary: Update a user by ID.
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string

      requestBody:
        content:
          application/json: # Media type
            schema: # Request body contents
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: OK
    delete:
      tags:
        - user
      summary: Delete a user by ID.
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string

      responses:
        "200":
          description: OK
  /disciplines:
    get:
      tags:
        - discipline
      summary: Get All Disciplines
      produces:
        - application/json
      parameters:
        - name: label
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          schema:
            type: object
            additionalProperties:
              type: integer
              format: int32
    post:
      tags:
        - discipline
      summary: Add a new Discipline
      requestBody:
        content:
          application/json: # Media type
            schema: # Request body contents
              $ref: "#/components/schemas/Discipline" # Reference to an object
      responses:
        "200":
          description: OK

  /disciplines/{Id}:
    get:
      tags:
        - discipline
      summary: Returns a discipline by ID.
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
    put:
      tags:
        - discipline
      summary: Update a discipline by ID.
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json: # Media type
            schema: # Request body contents
              $ref: "#/components/schemas/Discipline"
      responses:
        "200":
          description: OK
    delete:
      tags:
        - discipline
      summary: Delete a discipline by ID.
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
  /invitations:
    get:
      tags:
        - invitation
      summary: Get All Invitations
      produces:
        - application/json
      parameters:
        - name: etat
          in: query
          required: false
          schema:
            type: string
        - name: creacteBy
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          schema:
            type: object
            additionalProperties:
              type: integer
              format: int32
    post:
      tags:
        - invitation
      summary: Add a new Invitation
      requestBody:
        content:
          application/json: # Media type
            schema: # Request body contents
              $ref: "#/components/schemas/Invitation" # Reference to an object
      responses:
        "200":
          description: OK

  /invitations/{Id}:
    get:
      tags:
        - invitation
      summary: Returns a invitation by ID.
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
    put:
      tags:
        - invitation
      summary: Update a invitation by ID.
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json: # Media type
            schema: # Request body contents
              $ref: "#/components/schemas/Invitation"
      responses:
        "200":
          description: OK
    delete:
      tags:
        - invitation
      summary: Delete a invitation by ID.
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
